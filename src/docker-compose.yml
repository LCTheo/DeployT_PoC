version: "3.8"

services:
  register:
    build: register
    container_name: register
    restart: unless-stopped
    environment:
      name: register
    networks:
      - services

  api:
    build: api
    container_name: api
    restart: unless-stopped
    environment:
      name : api
    networks:
      - services
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deploytapi.entrypoints=http"
      - "traefik.http.routers.deploytapi.rule=Host(`api.lcfamilly.site`)"
      - "traefik.http.routers.deploytapi-secure.entrypoints=https"
      - "traefik.http.routers.deploytapi-secure.rule=Host(`api.lcfamilly.site`)"
      - "traefik.http.routers.deploytapi-secure.tls=true"
      - "traefik.http.routers.deploytapi-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.deploytapi-secure.service=deploytapi"
      - "traefik.http.services.deploytapi.loadbalancer.server.port=5000"
      - "traefik.docker.network=proxy"

  registration:
    build: registration
    container_name: registration
    restart: unless-stopped
    environment:
      name: registration
    networks:
      - services
      - db-user

  oauth:
    build: oauth
    container_name: oauth
    restart: unless-stopped
    environment:
      name: oauth
    networks:
      - services
      - db-user

  deploy:
    build: deploy
    container_name: deploy
    restart: unless-stopped
    environment:
      name: deploy
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  image:
    build: image
    container_name: image
    restart: unless-stopped
    environment:
      name: image
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  project:
    build: projectManager
    container_name: project
    restart: unless-stopped
    environment:
      name: project
    networks:
      - services
      - db-user

  db-user:
    image: mongo:latest
    container_name: mongo
    restart: always
    volumes:
      - DB-user:/data/db
    networks:
      - db-user
    ports:
      - "27017:27017"

  traefik:
    image: traefik:v2.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json
    environment:
      - "TZ=Europe/Paris"
      - "OVH_ENDPOINT=ovh-eu"
      - "OVH_APPLICATION_KEY="
      - "OVH_APPLICATION_SECRET="
      - "OVH_CONSUMER_KEY="
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lcfamilly.site`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=deployt:$$apr1$$JbRZ2xcW$$20rGKVaYGV02k.z1WL9pe1"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.lcfamilly.site`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-secure.service=api@internal"
networks:
  services:
  db-user:
  proxy:

volumes:
  DB-user: