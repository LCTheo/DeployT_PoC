version: "3.8"

services:
  register:
    build: register
    container_name: register
    restart: unless-stopped
    environment:
      name: register
    networks:
      - services

  api:
    build: api
    container_name: api
    restart: unless-stopped
    ports :
      - "80:5000"
    environment:
      name : api
    networks:
      - services

  registration:
    build: registration
    container_name: registration
    restart: unless-stopped
    environment:
      name: registration
    networks:
      - services
      - db-user

  oauth:
    build: oauth
    container_name: oauth
    restart: unless-stopped
    environment:
      name: oauth
    networks:
      - services
      - db-user

  deploy:
    build: deploy
    container_name: deploy
    restart: unless-stopped
    environment:
      name: deploy
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  image:
    build: image
    container_name: image
    restart: unless-stopped
    environment:
      name: image
    networks:
      - services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  project:
    build: projectManager
    container_name: project
    restart: unless-stopped
    environment:
      name: project
    networks:
      - services
      - db-user
    ports:
      - "5000:5000"

  db-user:
    image: mongo:latest
    container_name: mongo
    restart: always
    volumes:
      - DB-user:/data/db
    networks:
      - db-user
    ports:
      - "27017:27017"

networks:
  services:
  db-user:

volumes:
  DB-user: